package emptyLib._3D.Tutorials.away3d{	import away3d.core.base.Object3D;		import away3d.primitives.Cone;	import away3d.primitives.Cube;	import away3d.primitives.Cylinder;		import emptyLib._3D.Template;		import flash.events.Event;	import flash.events.KeyboardEvent;	import away3d.primitives.GeodesicSphere;	import away3d.primitives.GridPlane;	import away3d.primitives.LineSegment;	import away3d.primitives.Plane;	import away3d.primitives.RegularPolygon;	import away3d.primitives.RoundedCube;	import away3d.primitives.SeaTurtle;	public class PrimitivesDemo extends Template	{			protected var currentPrimitive:Object3D;				public function PrimitivesDemo():void		{			super();		}				protected override function initEngine():void		{			super.initEngine();			camera.z = -2000;			camera.x = -500;			camera.y = 300;		}				protected override function initScene():void		{			super.initScene();			this.initCone();		}				protected override function initListeners():void		{			super.initListeners();			this.stage.addEventListener(KeyboardEvent.KEY_UP,onKeyUp);			this.addEventListener(Event.ENTER_FRAME,onEnterFrame);			this.addEventListener(KeyboardEvent.KEY_UP,onKeyUp);		}				protected override function onEnterFrame(event:Event):void{			super.onEnterFrame(event);			this.currentPrimitive.rotationX += 1;			this.currentPrimitive.rotationZ += 1;			this.currentPrimitive.rotationY += 1;		}				protected function onKeyUp(event:KeyboardEvent):void{			this.removeCurrentPrimitive();			switch(event.keyCode){				case 49:					this.initCone();				break;				case 50:					this.initCube();				break;				case 51:					this.initCylinder();				break;				case 52:					this.initGeodesicSphere();				break;				case 53:					this.initGridPlane();				break;				case 54:					this.initLineSegment();				break;				case 55:					this.initPlane();				break;				case 56:					this.initRegularPolygon();				break;				case 57:					this.initRoundedCube();				break;								default:					this.initCone();				break;				}		}				protected function removeCurrentPrimitive():void{			this.scene.removeChild(this.currentPrimitive);			this.currentPrimitive = null;		}				protected function initCone():void{			this.currentPrimitive = new Cone({height:150});			this.scene.addChild(currentPrimitive);		}				protected function initCube():void{			this.currentPrimitive = new Cube({height:150});			this.scene.addChild(currentPrimitive);		}			protected function initCylinder():void{			this.currentPrimitive = new Cylinder({height:150});			this.scene.addChild(this.currentPrimitive);		}			protected function initGeodesicSphere():void{			this.currentPrimitive = new GeodesicSphere({height:150});			this.scene.addChild(this.currentPrimitive);		}			protected function initGridPlane():void{			this.currentPrimitive = new GridPlane({segments:4});			this.scene.addChild(this.currentPrimitive);		}				protected function initLineSegment():void{			this.currentPrimitive = new LineSegment({edge:500});			this.scene.addChild(this.currentPrimitive);		}				protected function initPlane():void{			this.currentPrimitive = new Plane({bothsides:true});			this.scene.addChild(this.currentPrimitive);		}				protected function initRegularPolygon():void{			this.currentPrimitive = new RegularPolygon({bothsides:true});			this.scene.addChild(this.currentPrimitive);		}				protected function initRoundedCube():void{			this.currentPrimitive = new RoundedCube({height:150});			this.scene.addChild(this.currentPrimitive);		}				protected function initSeaTurtle():void{			this.currentPrimitive = new SeaTurtle({scale:0.3});			this.scene.addChild(this.currentPrimitive);		}		}}